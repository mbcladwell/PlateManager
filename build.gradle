/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/4.8/userguide/tutorial_java_projects.html
 */

plugins {
    // Apply the java plugin to add support for Java
    id 'java'

    // Apply the application plugin to add support for building an application
    id 'application'
}

// Define the main class for the application
mainClassName = 'pm.Main'
version = '0.1'



dependencies {
    // This dependency is found on compile classpath of this component and consumers.
    compile 'com.google.guava:guava:23.0'

    // Use JUnit test framework
    testCompile 'junit:junit:4.12'
	//compile files("objectdb-2.7.5/bin/converter.jar")

	// OBJECTDB:
	compile 'com.objectdb:objectdb:2.7.5'
	compile 'org.eclipse.persistence:javax.persistence:2.2.0'
	compile 'javax.transaction:jta:1.1'
	
	//Help system
	compile 'javax.help:javahelp:2.0.05'

       compile 'net.stihie:llm:0.1'
//JSON parsing
compile 'com.google.code.gson:gson:2.8.5'

//QR code library
        compile 'com.google.zxing:core:3.3.3'
        implementation 'com.google.zxing:core:3.3.3'
        compile 'com.google.zxing:javase:3.3.3'
        implementation 'com.google.zxing:javase:3.3.3'
	
}



// In this section you declare where to find the dependencies of your project
repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
	maven {
    url 'http://m2.objectdb.com'
  }
     mavenLocal()


}


task showMeCache << {
  configurations.compile.each { println it }
}

clean.doFirst {
    delete "${rootDir}/myDbFile.odb"
    println "${rootDir}/myDbFile.odb"
}




task enhance(type: JavaExec) {
  main = 'com.objectdb.Enhancer'
  classpath = sourceSets.main.runtimeClasspath
  args '-cp', 'build/classes/java/main/pm' 
}
compileJava.finalizedBy(enhance)



task runAddProject(type: JavaExec) {
  classpath = sourceSets.main.runtimeClasspath
  //classpath = src.test.java

  main = 'pm.DialogAddProjectTest'

  // arguments to pass to the application
  //args 'appArg1'
}



task runMain(type: JavaExec) {
  classpath = sourceSets.main.runtimeClasspath
  //classpath = src.test.java

  main = 'pm.Main'

  // arguments to pass to the application
  //args 'appArg1'
}


task printSourceSetOutputDir {
    doLast {
        println sourceSets.main.java.outputDir
    }
}

jar {
    manifest {
        attributes(
                'Main-Class': mainClassName,
                'Implementation-Title': 'Plate Manager',
                'Implementation-Version': version,
                'provider': 'gradle'
        )
    }
}




